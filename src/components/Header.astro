<header data-nav 
class="fixed top-0 lg:top-4 left-1/2 -translate-x-1/2 z-50 flex justify-center items-center px-8 py-5 lg:px-6 lg:py-3 lg:mt-6 w-full lg:w-auto lg:border-[3px] lg:rounded-full lg:border-[#c9e8ff] hover:border-[#ff6622] border-opacity-90 transition-all duration-200 ease-in-out">
    
    <!-- Desktop Navigation -->
    <nav data-nav-inner class="hidden lg:flex justify-center items-center flex-row gap-x-16 font-bold">
        <a class="hover:text-[#ff6622] nav-link transition-colors duration-200" href="#sobre-mi" id="nav-sobre-mi">
            Sobre mí
        </a>
        <a class="hover:text-[#ff6622] nav-link transition-colors duration-200" href="#tecnologias" id="nav-tecnologias">
            Tecnologías
        </a>
        <a class="hover:text-[#ff6622] nav-link transition-colors duration-200" href="#proyectos" id="nav-proyectos">
            Proyectos
        </a>
        <a class="hover:text-[#ff6622] nav-link transition-colors duration-200" href="#experiencia" id="nav-experiencia">
            Experiencia
        </a>
        <a class="hover:text-[#ff6622] nav-link transition-colors duration-200" href="#contacto" id="nav-contacto">
            Contacto
        </a>
    </nav>

    <!-- Mobile/Tablet Navigation -->
    <div class="lg:hidden flex items-center justify-between w-full px-6">
        <!-- Logo -->
        <div class="flex items-center">
            <img src="favicon.png" alt="Logo" class="w-8 h-8">
        </div>
        
        <!-- Hamburger Menu Button -->
        <button 
            id="mobile-menu-btn" 
            class="flex justify-center items-center w-10 h-10 focus:outline-none group text-white hover:text-[#ff6622] transition-colors duration-300"
            aria-label="Toggle menu"
        >
            <svg xmlns="http://www.w3.org/2000/svg" width="46" height="46" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="transition-transform duration-300" id="hamburger-icon">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                <path d="M7 6h10" />
                <path d="M4 12h16" />
                <path d="M7 12h13" />
                <path d="M7 18h10" />
            </svg>
        </button>
    </div>

    <!-- Mobile Menu (dropdown bajo el navbar; no tapa el header) -->
<div 
  id="mobile-menu" 
  class="lg:hidden absolute top-full left-1/2 -translate-x-1/2 mt-2
         w-[92vw] max-w-5xl rounded-2xl border-2 border-white/10
         bg-[#0b0f1a] shadow-2xl max-h-[70vh] overflow-y-auto
         opacity-0 invisible transition-all duration-200 ease-out z-40">
  <div class="flex flex-col items-center py-4 space-y-6">
    <a class="text-2xl font-bold text-[#c9e8ff] hover:text-[#ff6622] transition-colors duration-200 mobile-nav-link" href="#sobre-mi" data-target="nav-sobre-mi">
      Sobre mí
    </a>
    <a class="text-2xl font-bold text-[#c9e8ff] hover:text-[#ff6622] transition-colors duration-200 mobile-nav-link" href="#tecnologias" data-target="nav-tecnologias">
      Tecnologías
    </a>
    <a class="text-2xl font-bold text-[#c9e8ff] hover:text-[#ff6622] transition-colors duration-200 mobile-nav-link" href="#proyectos" data-target="nav-proyectos">
      Proyectos
    </a>
    <a class="text-2xl font-bold text-[#c9e8ff] hover:text-[#ff6622] transition-colors duration-200 mobile-nav-link" href="#experiencia" data-target="nav-experiencia">
      Experiencia
    </a>
    <a class="text-2xl font-bold text-[#c9e8ff] hover:text-[#ff6622] transition-colors duration-200 mobile-nav-link" href="#contacto" data-target="nav-contacto">
      Contacto
    </a>
  </div>
</div>

   <script is:inline>
  // @ts-check
  const header = document.querySelector('header[data-nav]');
  if (header) {
      const THRESHOLD = 60;
      /**
       * @param {boolean} on
       */
      const apply = (on) => {
          header.classList.toggle('bg-transparent', !on);
          header.classList.toggle('bg-[#0b0f1a]', on);
          header.classList.toggle('border-opacity-85', on);
      };
      const onScroll = () => apply(window.scrollY > THRESHOLD);
      onScroll();
      window.addEventListener('scroll', onScroll, { passive: true });
  }

  // Mobile menu functionality
  const mobileMenuBtn = document.getElementById('mobile-menu-btn');
  const mobileMenu = document.getElementById('mobile-menu');
  const hamburgerIcon = document.getElementById('hamburger-icon');
  const mobileNavLinks = document.querySelectorAll('.mobile-nav-link');
  
  let isMenuOpen = false;

  const toggleMenu = () => {
    if (!mobileMenu || !hamburgerIcon) return;
    
    isMenuOpen = !isMenuOpen;
    
    if (isMenuOpen) {
      // Show menu
      mobileMenu.classList.remove('opacity-0', 'invisible');
      mobileMenu.classList.add('opacity-100', 'visible');
      
      // Rotate hamburger icon
      hamburgerIcon.style.transform = 'rotate(90deg)';
      
      // Prevent body scroll
      if (document.body) {
        document.body.style.overflow = 'hidden';
      }
    } else {
      // Hide menu
      mobileMenu.classList.remove('opacity-100', 'visible');
      mobileMenu.classList.add('opacity-0', 'invisible');
      
      // Reset hamburger icon rotation
      hamburgerIcon.style.transform = 'rotate(0deg)';
      
      // Restore body scroll
      if (document.body) {
        document.body.style.overflow = '';
      }
    }
  };

  if (mobileMenuBtn) {
    mobileMenuBtn.addEventListener('click', toggleMenu);
  }

  document.addEventListener('click', (e) => {
  if (!isMenuOpen || !mobileMenu || !mobileMenuBtn) return;
  const t = e.target;
  if (!(t instanceof Node)) return;

  if (!mobileMenu.contains(t) && !mobileMenuBtn.contains(t)) {
    toggleMenu();
  }
});

  // Close menu when clicking outside (on overlay)
  if (mobileMenu) {
    mobileMenu.addEventListener('click', (e) => {
      if (e.target === mobileMenu) {
        toggleMenu();
      }
    });
  }

  // Close menu on escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && isMenuOpen) {
      toggleMenu();
    }
  });

  // Active nav link for both desktop and mobile
  const sections = [
    { id: 'sobre-mi', nav: 'nav-sobre-mi' },
    { id: 'tecnologias', nav: 'nav-tecnologias' },
    { id: 'proyectos', nav: 'nav-proyectos' },
    { id: 'experiencia', nav: 'nav-experiencia' },
    { id: 'contacto', nav: 'nav-contacto' }
  ];

  function setActiveNav() {
    let activeIdx = 0;
    sections.forEach((section, idx) => {
      const el = document.getElementById(section.id);
      if (el) {
        const rect = el.getBoundingClientRect();
        if (rect.top <= 120 && rect.bottom > 120) {
          activeIdx = idx;
        }
      }
    });
    
    // Update desktop nav
    sections.forEach((section, idx) => {
      const link = document.getElementById(section.nav);
      if (link) {
        link.classList.toggle('text-[#ff6622]', idx === activeIdx);
        link.classList.toggle('text-[#c9e8ff]', idx !== activeIdx);
      }
    });
    
    // Update mobile nav
    mobileNavLinks.forEach((link, idx) => {
      if (sections[idx]) {
        link.classList.toggle('text-[#ff6622]', idx === activeIdx);
        link.classList.toggle('text-[#c9e8ff]', idx !== activeIdx);
      }
    });
  }
  
  window.addEventListener('scroll', setActiveNav, { passive: true });
  window.addEventListener('DOMContentLoaded', setActiveNav);

  // Handle window resize
  window.addEventListener('resize', () => {
    if (window.innerWidth >= 1024 && isMenuOpen) {
      // Close mobile menu if window becomes large
      toggleMenu();
    }
  });

  // Cerrar el menú al pulsar cualquier enlace del menú móvil
mobileNavLinks.forEach((link) => {
  link.addEventListener('click', () => {
    if (isMenuOpen) toggleMenu(); // restaura scroll y resetea el icono
  });
});
  
  // Wait for DOM to be fully loaded before initializing
  document.addEventListener('DOMContentLoaded', () => {
    // Re-query elements after DOM is loaded
    const btn = document.getElementById('mobile-menu-btn');
    const menu = document.getElementById('mobile-menu');
    const icon = document.getElementById('hamburger-icon');
    const links = document.querySelectorAll('.mobile-nav-link');
    
    // Ensure all elements exist before setting up event listeners
    if (btn && menu && icon && links.length > 0) {
      console.log('Mobile menu initialized successfully');
    }
  });
</script>
</header>